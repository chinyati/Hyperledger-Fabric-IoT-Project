# HELP endorser_proposal_duration The time to complete a proposal.
# TYPE endorser_proposal_duration histogram
endorser_proposal_duration_bucket{chaincode="cscc",channel="",success="true",le="0.005"} 0
endorser_proposal_duration_bucket{chaincode="cscc",channel="",success="true",le="0.01"} 0
endorser_proposal_duration_bucket{chaincode="cscc",channel="",success="true",le="0.025"} 0
endorser_proposal_duration_bucket{chaincode="cscc",channel="",success="true",le="0.05"} 0
endorser_proposal_duration_bucket{chaincode="cscc",channel="",success="true",le="0.1"} 1
endorser_proposal_duration_bucket{chaincode="cscc",channel="",success="true",le="0.25"} 1
endorser_proposal_duration_bucket{chaincode="cscc",channel="",success="true",le="0.5"} 1
endorser_proposal_duration_bucket{chaincode="cscc",channel="",success="true",le="1"} 1
endorser_proposal_duration_bucket{chaincode="cscc",channel="",success="true",le="2.5"} 1
endorser_proposal_duration_bucket{chaincode="cscc",channel="",success="true",le="5"} 1
endorser_proposal_duration_bucket{chaincode="cscc",channel="",success="true",le="10"} 1
endorser_proposal_duration_bucket{chaincode="cscc",channel="",success="true",le="+Inf"} 1
endorser_proposal_duration_sum{chaincode="cscc",channel="",success="true"} 0.085406687
endorser_proposal_duration_count{chaincode="cscc",channel="",success="true"} 1
# HELP endorser_proposals_received The number of proposals received.
# TYPE endorser_proposals_received counter
endorser_proposals_received 1
# HELP endorser_successful_proposals The number of successful proposals.
# TYPE endorser_successful_proposals counter
endorser_successful_proposals 1
# HELP fabric_version The active version of Fabric.
# TYPE fabric_version gauge
fabric_version{version="2.1.0"} 1
# HELP go_gc_duration_seconds A summary of the GC invocation durations.
# TYPE go_gc_duration_seconds summary
go_gc_duration_seconds{quantile="0"} 8.228e-06
go_gc_duration_seconds{quantile="0.25"} 1.1165e-05
go_gc_duration_seconds{quantile="0.5"} 9.9365e-05
go_gc_duration_seconds{quantile="0.75"} 0.000140627
go_gc_duration_seconds{quantile="1"} 0.140420516
go_gc_duration_seconds_sum 0.140841073
go_gc_duration_seconds_count 8
# HELP go_goroutines Number of goroutines that currently exist.
# TYPE go_goroutines gauge
go_goroutines 129
# HELP go_info Information about the Go environment.
# TYPE go_info gauge
go_info{version="go1.14.1"} 1
# HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.
# TYPE go_memstats_alloc_bytes gauge
go_memstats_alloc_bytes 4.29556e+07
# HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed.
# TYPE go_memstats_alloc_bytes_total counter
go_memstats_alloc_bytes_total 7.2427672e+07
# HELP go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table.
# TYPE go_memstats_buck_hash_sys_bytes gauge
go_memstats_buck_hash_sys_bytes 1.468211e+06
# HELP go_memstats_frees_total Total number of frees.
# TYPE go_memstats_frees_total counter
go_memstats_frees_total 516793
# HELP go_memstats_gc_cpu_fraction The fraction of this program's available CPU time used by the GC since the program started.
# TYPE go_memstats_gc_cpu_fraction gauge
go_memstats_gc_cpu_fraction 0.001150413846384288
# HELP go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata.
# TYPE go_memstats_gc_sys_bytes gauge
go_memstats_gc_sys_bytes 3.655944e+06
# HELP go_memstats_heap_alloc_bytes Number of heap bytes allocated and still in use.
# TYPE go_memstats_heap_alloc_bytes gauge
go_memstats_heap_alloc_bytes 4.29556e+07
# HELP go_memstats_heap_idle_bytes Number of heap bytes waiting to be used.
# TYPE go_memstats_heap_idle_bytes gauge
go_memstats_heap_idle_bytes 1.7604608e+07
# HELP go_memstats_heap_inuse_bytes Number of heap bytes that are in use.
# TYPE go_memstats_heap_inuse_bytes gauge
go_memstats_heap_inuse_bytes 4.8357376e+07
# HELP go_memstats_heap_objects Number of allocated objects.
# TYPE go_memstats_heap_objects gauge
go_memstats_heap_objects 33486
# HELP go_memstats_heap_released_bytes Number of heap bytes released to OS.
# TYPE go_memstats_heap_released_bytes gauge
go_memstats_heap_released_bytes 6.30784e+06
# HELP go_memstats_heap_sys_bytes Number of heap bytes obtained from system.
# TYPE go_memstats_heap_sys_bytes gauge
go_memstats_heap_sys_bytes 6.5961984e+07
# HELP go_memstats_last_gc_time_seconds Number of seconds since 1970 of last garbage collection.
# TYPE go_memstats_last_gc_time_seconds gauge
go_memstats_last_gc_time_seconds 1.599269270250884e+09
# HELP go_memstats_lookups_total Total number of pointer lookups.
# TYPE go_memstats_lookups_total counter
go_memstats_lookups_total 0
# HELP go_memstats_mallocs_total Total number of mallocs.
# TYPE go_memstats_mallocs_total counter
go_memstats_mallocs_total 550279
# HELP go_memstats_mcache_inuse_bytes Number of bytes in use by mcache structures.
# TYPE go_memstats_mcache_inuse_bytes gauge
go_memstats_mcache_inuse_bytes 6944
# HELP go_memstats_mcache_sys_bytes Number of bytes used for mcache structures obtained from system.
# TYPE go_memstats_mcache_sys_bytes gauge
go_memstats_mcache_sys_bytes 16384
# HELP go_memstats_mspan_inuse_bytes Number of bytes in use by mspan structures.
# TYPE go_memstats_mspan_inuse_bytes gauge
go_memstats_mspan_inuse_bytes 183464
# HELP go_memstats_mspan_sys_bytes Number of bytes used for mspan structures obtained from system.
# TYPE go_memstats_mspan_sys_bytes gauge
go_memstats_mspan_sys_bytes 311296
# HELP go_memstats_next_gc_bytes Number of heap bytes when next garbage collection will take place.
# TYPE go_memstats_next_gc_bytes gauge
go_memstats_next_gc_bytes 8.4129456e+07
# HELP go_memstats_other_sys_bytes Number of bytes used for other system allocations.
# TYPE go_memstats_other_sys_bytes gauge
go_memstats_other_sys_bytes 987333
# HELP go_memstats_stack_inuse_bytes Number of bytes in use by the stack allocator.
# TYPE go_memstats_stack_inuse_bytes gauge
go_memstats_stack_inuse_bytes 1.14688e+06
# HELP go_memstats_stack_sys_bytes Number of bytes obtained from system for stack allocator.
# TYPE go_memstats_stack_sys_bytes gauge
go_memstats_stack_sys_bytes 1.14688e+06
# HELP go_memstats_sys_bytes Number of bytes obtained from system.
# TYPE go_memstats_sys_bytes gauge
go_memstats_sys_bytes 7.3548032e+07
# HELP go_threads Number of OS threads created.
# TYPE go_threads gauge
go_threads 10
# HELP gossip_comm_messages_received Number of messages received
# TYPE gossip_comm_messages_received counter
gossip_comm_messages_received 235
# HELP gossip_comm_messages_sent Number of messages sent
# TYPE gossip_comm_messages_sent counter
gossip_comm_messages_sent 255
# HELP gossip_leader_election_leader Peer is leader (1) or follower (0)
# TYPE gossip_leader_election_leader gauge
gossip_leader_election_leader{channel="ebenezer"} 1
# HELP gossip_membership_total_peers_known Total known peers
# TYPE gossip_membership_total_peers_known gauge
gossip_membership_total_peers_known{channel="ebenezer"} 1
# HELP gossip_privdata_reconciliation_duration Time it takes for reconciliation to complete (in seconds)
# TYPE gossip_privdata_reconciliation_duration histogram
gossip_privdata_reconciliation_duration_bucket{channel="ebenezer",le="0.005"} 1
gossip_privdata_reconciliation_duration_bucket{channel="ebenezer",le="0.01"} 1
gossip_privdata_reconciliation_duration_bucket{channel="ebenezer",le="0.025"} 1
gossip_privdata_reconciliation_duration_bucket{channel="ebenezer",le="0.05"} 1
gossip_privdata_reconciliation_duration_bucket{channel="ebenezer",le="0.1"} 1
gossip_privdata_reconciliation_duration_bucket{channel="ebenezer",le="0.25"} 1
gossip_privdata_reconciliation_duration_bucket{channel="ebenezer",le="0.5"} 1
gossip_privdata_reconciliation_duration_bucket{channel="ebenezer",le="1"} 1
gossip_privdata_reconciliation_duration_bucket{channel="ebenezer",le="2.5"} 1
gossip_privdata_reconciliation_duration_bucket{channel="ebenezer",le="5"} 1
gossip_privdata_reconciliation_duration_bucket{channel="ebenezer",le="10"} 1
gossip_privdata_reconciliation_duration_bucket{channel="ebenezer",le="+Inf"} 1
gossip_privdata_reconciliation_duration_sum{channel="ebenezer"} 3.2395e-05
gossip_privdata_reconciliation_duration_count{channel="ebenezer"} 1
# HELP grpc_comm_conn_closed gRPC connections closed. Open minus closed is the active number of connections.
# TYPE grpc_comm_conn_closed counter
grpc_comm_conn_closed 2
# HELP grpc_comm_conn_opened gRPC connections opened. Open minus closed is the active number of connections.
# TYPE grpc_comm_conn_opened counter
grpc_comm_conn_opened 3
# HELP grpc_server_stream_messages_received The number of stream messages received.
# TYPE grpc_server_stream_messages_received counter
grpc_server_stream_messages_received{method="GossipStream",service="gossip_Gossip"} 237
# HELP grpc_server_stream_messages_sent The number of stream messages sent.
# TYPE grpc_server_stream_messages_sent counter
grpc_server_stream_messages_sent{method="GossipStream",service="gossip_Gossip"} 257
# HELP grpc_server_stream_request_duration The time to complete a stream request.
# TYPE grpc_server_stream_request_duration histogram
grpc_server_stream_request_duration_bucket{code="OK",method="GossipStream",service="gossip_Gossip",le="0.005"} 1
grpc_server_stream_request_duration_bucket{code="OK",method="GossipStream",service="gossip_Gossip",le="0.01"} 1
grpc_server_stream_request_duration_bucket{code="OK",method="GossipStream",service="gossip_Gossip",le="0.025"} 1
grpc_server_stream_request_duration_bucket{code="OK",method="GossipStream",service="gossip_Gossip",le="0.05"} 1
grpc_server_stream_request_duration_bucket{code="OK",method="GossipStream",service="gossip_Gossip",le="0.1"} 1
grpc_server_stream_request_duration_bucket{code="OK",method="GossipStream",service="gossip_Gossip",le="0.25"} 1
grpc_server_stream_request_duration_bucket{code="OK",method="GossipStream",service="gossip_Gossip",le="0.5"} 1
grpc_server_stream_request_duration_bucket{code="OK",method="GossipStream",service="gossip_Gossip",le="1"} 1
grpc_server_stream_request_duration_bucket{code="OK",method="GossipStream",service="gossip_Gossip",le="2.5"} 1
grpc_server_stream_request_duration_bucket{code="OK",method="GossipStream",service="gossip_Gossip",le="5"} 1
grpc_server_stream_request_duration_bucket{code="OK",method="GossipStream",service="gossip_Gossip",le="10"} 1
grpc_server_stream_request_duration_bucket{code="OK",method="GossipStream",service="gossip_Gossip",le="+Inf"} 1
grpc_server_stream_request_duration_sum{code="OK",method="GossipStream",service="gossip_Gossip"} 0.001948226
grpc_server_stream_request_duration_count{code="OK",method="GossipStream",service="gossip_Gossip"} 1
# HELP grpc_server_stream_requests_completed The number of stream requests completed.
# TYPE grpc_server_stream_requests_completed counter
grpc_server_stream_requests_completed{code="OK",method="GossipStream",service="gossip_Gossip"} 1
# HELP grpc_server_stream_requests_received The number of stream requests received.
# TYPE grpc_server_stream_requests_received counter
grpc_server_stream_requests_received{method="GossipStream",service="gossip_Gossip"} 2
# HELP grpc_server_unary_request_duration The time to complete a unary request.
# TYPE grpc_server_unary_request_duration histogram
grpc_server_unary_request_duration_bucket{code="OK",method="Ping",service="gossip_Gossip",le="0.005"} 2
grpc_server_unary_request_duration_bucket{code="OK",method="Ping",service="gossip_Gossip",le="0.01"} 2
grpc_server_unary_request_duration_bucket{code="OK",method="Ping",service="gossip_Gossip",le="0.025"} 2
grpc_server_unary_request_duration_bucket{code="OK",method="Ping",service="gossip_Gossip",le="0.05"} 2
grpc_server_unary_request_duration_bucket{code="OK",method="Ping",service="gossip_Gossip",le="0.1"} 2
grpc_server_unary_request_duration_bucket{code="OK",method="Ping",service="gossip_Gossip",le="0.25"} 2
grpc_server_unary_request_duration_bucket{code="OK",method="Ping",service="gossip_Gossip",le="0.5"} 2
grpc_server_unary_request_duration_bucket{code="OK",method="Ping",service="gossip_Gossip",le="1"} 2
grpc_server_unary_request_duration_bucket{code="OK",method="Ping",service="gossip_Gossip",le="2.5"} 2
grpc_server_unary_request_duration_bucket{code="OK",method="Ping",service="gossip_Gossip",le="5"} 2
grpc_server_unary_request_duration_bucket{code="OK",method="Ping",service="gossip_Gossip",le="10"} 2
grpc_server_unary_request_duration_bucket{code="OK",method="Ping",service="gossip_Gossip",le="+Inf"} 2
grpc_server_unary_request_duration_sum{code="OK",method="Ping",service="gossip_Gossip"} 0.000167917
grpc_server_unary_request_duration_count{code="OK",method="Ping",service="gossip_Gossip"} 2
grpc_server_unary_request_duration_bucket{code="OK",method="ProcessProposal",service="protos_Endorser",le="0.005"} 0
grpc_server_unary_request_duration_bucket{code="OK",method="ProcessProposal",service="protos_Endorser",le="0.01"} 0
grpc_server_unary_request_duration_bucket{code="OK",method="ProcessProposal",service="protos_Endorser",le="0.025"} 0
grpc_server_unary_request_duration_bucket{code="OK",method="ProcessProposal",service="protos_Endorser",le="0.05"} 0
grpc_server_unary_request_duration_bucket{code="OK",method="ProcessProposal",service="protos_Endorser",le="0.1"} 1
grpc_server_unary_request_duration_bucket{code="OK",method="ProcessProposal",service="protos_Endorser",le="0.25"} 1
grpc_server_unary_request_duration_bucket{code="OK",method="ProcessProposal",service="protos_Endorser",le="0.5"} 1
grpc_server_unary_request_duration_bucket{code="OK",method="ProcessProposal",service="protos_Endorser",le="1"} 1
grpc_server_unary_request_duration_bucket{code="OK",method="ProcessProposal",service="protos_Endorser",le="2.5"} 1
grpc_server_unary_request_duration_bucket{code="OK",method="ProcessProposal",service="protos_Endorser",le="5"} 1
grpc_server_unary_request_duration_bucket{code="OK",method="ProcessProposal",service="protos_Endorser",le="10"} 1
grpc_server_unary_request_duration_bucket{code="OK",method="ProcessProposal",service="protos_Endorser",le="+Inf"} 1
grpc_server_unary_request_duration_sum{code="OK",method="ProcessProposal",service="protos_Endorser"} 0.085610512
grpc_server_unary_request_duration_count{code="OK",method="ProcessProposal",service="protos_Endorser"} 1
# HELP grpc_server_unary_requests_completed The number of unary requests completed.
# TYPE grpc_server_unary_requests_completed counter
grpc_server_unary_requests_completed{code="OK",method="Ping",service="gossip_Gossip"} 2
grpc_server_unary_requests_completed{code="OK",method="ProcessProposal",service="protos_Endorser"} 1
# HELP grpc_server_unary_requests_received The number of unary requests received.
# TYPE grpc_server_unary_requests_received counter
grpc_server_unary_requests_received{method="Ping",service="gossip_Gossip"} 2
grpc_server_unary_requests_received{method="ProcessProposal",service="protos_Endorser"} 1
# HELP ledger_block_processing_time Time taken in seconds for ledger block processing.
# TYPE ledger_block_processing_time histogram
ledger_block_processing_time_bucket{channel="ebenezer",le="0.005"} 1
ledger_block_processing_time_bucket{channel="ebenezer",le="0.01"} 1
ledger_block_processing_time_bucket{channel="ebenezer",le="0.015"} 1
ledger_block_processing_time_bucket{channel="ebenezer",le="0.05"} 1
ledger_block_processing_time_bucket{channel="ebenezer",le="0.1"} 1
ledger_block_processing_time_bucket{channel="ebenezer",le="1"} 1
ledger_block_processing_time_bucket{channel="ebenezer",le="10"} 1
ledger_block_processing_time_bucket{channel="ebenezer",le="+Inf"} 1
ledger_block_processing_time_sum{channel="ebenezer"} 0.000221509
ledger_block_processing_time_count{channel="ebenezer"} 1
# HELP ledger_blockchain_height Height of the chain in blocks.
# TYPE ledger_blockchain_height gauge
ledger_blockchain_height{channel="ebenezer"} 1
# HELP ledger_blockstorage_and_pvtdata_commit_time Time taken in seconds for committing the block and private data to storage.
# TYPE ledger_blockstorage_and_pvtdata_commit_time histogram
ledger_blockstorage_and_pvtdata_commit_time_bucket{channel="ebenezer",le="0.005"} 0
ledger_blockstorage_and_pvtdata_commit_time_bucket{channel="ebenezer",le="0.01"} 0
ledger_blockstorage_and_pvtdata_commit_time_bucket{channel="ebenezer",le="0.015"} 0
ledger_blockstorage_and_pvtdata_commit_time_bucket{channel="ebenezer",le="0.05"} 1
ledger_blockstorage_and_pvtdata_commit_time_bucket{channel="ebenezer",le="0.1"} 1
ledger_blockstorage_and_pvtdata_commit_time_bucket{channel="ebenezer",le="1"} 1
ledger_blockstorage_and_pvtdata_commit_time_bucket{channel="ebenezer",le="10"} 1
ledger_blockstorage_and_pvtdata_commit_time_bucket{channel="ebenezer",le="+Inf"} 1
ledger_blockstorage_and_pvtdata_commit_time_sum{channel="ebenezer"} 0.015102428
ledger_blockstorage_and_pvtdata_commit_time_count{channel="ebenezer"} 1
# HELP ledger_blockstorage_commit_time Time taken in seconds for committing the block to storage.
# TYPE ledger_blockstorage_commit_time histogram
ledger_blockstorage_commit_time_bucket{channel="ebenezer",le="0.005"} 0
ledger_blockstorage_commit_time_bucket{channel="ebenezer",le="0.01"} 1
ledger_blockstorage_commit_time_bucket{channel="ebenezer",le="0.015"} 1
ledger_blockstorage_commit_time_bucket{channel="ebenezer",le="0.05"} 1
ledger_blockstorage_commit_time_bucket{channel="ebenezer",le="0.1"} 1
ledger_blockstorage_commit_time_bucket{channel="ebenezer",le="1"} 1
ledger_blockstorage_commit_time_bucket{channel="ebenezer",le="10"} 1
ledger_blockstorage_commit_time_bucket{channel="ebenezer",le="+Inf"} 1
ledger_blockstorage_commit_time_sum{channel="ebenezer"} 0.005388358
ledger_blockstorage_commit_time_count{channel="ebenezer"} 1
# HELP ledger_statedb_commit_time Time taken in seconds for committing block changes to state db.
# TYPE ledger_statedb_commit_time histogram
ledger_statedb_commit_time_bucket{channel="ebenezer",le="0.005"} 0
ledger_statedb_commit_time_bucket{channel="ebenezer",le="0.01"} 0
ledger_statedb_commit_time_bucket{channel="ebenezer",le="0.015"} 0
ledger_statedb_commit_time_bucket{channel="ebenezer",le="0.05"} 1
ledger_statedb_commit_time_bucket{channel="ebenezer",le="0.1"} 1
ledger_statedb_commit_time_bucket{channel="ebenezer",le="1"} 1
ledger_statedb_commit_time_bucket{channel="ebenezer",le="10"} 1
ledger_statedb_commit_time_bucket{channel="ebenezer",le="+Inf"} 1
ledger_statedb_commit_time_sum{channel="ebenezer"} 0.039696251
ledger_statedb_commit_time_count{channel="ebenezer"} 1
# HELP ledger_transaction_count Number of transactions processed.
# TYPE ledger_transaction_count counter
ledger_transaction_count{chaincode="unknown",channel="ebenezer",transaction_type="CONFIG",validation_code="VALID"} 1
# HELP logging_entries_checked Number of log entries checked against the active logging level
# TYPE logging_entries_checked counter
logging_entries_checked{level="info"} 44
logging_entries_checked{level="warn"} 46
# HELP logging_entries_written Number of log entries that are written
# TYPE logging_entries_written counter
logging_entries_written{level="info"} 44
logging_entries_written{level="warn"} 46
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 3.28
# HELP process_max_fds Maximum number of open file descriptors.
# TYPE process_max_fds gauge
process_max_fds 1.048576e+06
# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 51
# HELP process_resident_memory_bytes Resident memory size in bytes.
# TYPE process_resident_memory_bytes gauge
process_resident_memory_bytes 5.7257984e+07
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.59926909484e+09
# HELP process_virtual_memory_bytes Virtual memory size in bytes.
# TYPE process_virtual_memory_bytes gauge
process_virtual_memory_bytes 7.57444608e+08
# HELP process_virtual_memory_max_bytes Maximum amount of virtual memory available in bytes.
# TYPE process_virtual_memory_max_bytes gauge
process_virtual_memory_max_bytes -1
# HELP promhttp_metric_handler_requests_in_flight Current number of scrapes being served.
# TYPE promhttp_metric_handler_requests_in_flight gauge
promhttp_metric_handler_requests_in_flight 1
# HELP promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code.
# TYPE promhttp_metric_handler_requests_total counter
promhttp_metric_handler_requests_total{code="200"} 2
promhttp_metric_handler_requests_total{code="500"} 0
promhttp_metric_handler_requests_total{code="503"} 0
